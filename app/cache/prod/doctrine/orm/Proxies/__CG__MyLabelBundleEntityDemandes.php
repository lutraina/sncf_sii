<?php

namespace Proxies\__CG__\MyLabelBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Demandes extends \MyLabelBundle\Entity\Demandes implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'id', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'dateDmd', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'nom', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'prenom', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'matricule', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'mail', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'nomProjet', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'descProjet', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'caracProjet', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'dateMEP', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'labelDmd', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'dateLabel', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'statutDmd'];
        }

        return ['__isInitialized__', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'id', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'dateDmd', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'nom', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'prenom', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'matricule', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'mail', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'nomProjet', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'descProjet', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'caracProjet', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'dateMEP', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'labelDmd', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'dateLabel', '' . "\0" . 'MyLabelBundle\\Entity\\Demandes' . "\0" . 'statutDmd'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Demandes $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDmd($dateDmd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDmd', [$dateDmd]);

        return parent::setDateDmd($dateDmd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDmd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDmd', []);

        return parent::getDateDmd();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatricule($matricule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatricule', [$matricule]);

        return parent::setMatricule($matricule);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatricule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatricule', []);

        return parent::getMatricule();
    }

    /**
     * {@inheritDoc}
     */
    public function setMail($mail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMail', [$mail]);

        return parent::setMail($mail);
    }

    /**
     * {@inheritDoc}
     */
    public function getMail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMail', []);

        return parent::getMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomProjet($nomProjet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomProjet', [$nomProjet]);

        return parent::setNomProjet($nomProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomProjet', []);

        return parent::getNomProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescProjet($descProjet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescProjet', [$descProjet]);

        return parent::setDescProjet($descProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescProjet', []);

        return parent::getDescProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setCaracProjet($caracProjet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaracProjet', [$caracProjet]);

        return parent::setCaracProjet($caracProjet);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaracProjet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaracProjet', []);

        return parent::getCaracProjet();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateMEP($dateMEP)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateMEP', [$dateMEP]);

        return parent::setDateMEP($dateMEP);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateMEP()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateMEP', []);

        return parent::getDateMEP();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelDmd($labelDmd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelDmd', [$labelDmd]);

        return parent::setLabelDmd($labelDmd);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelDmd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelDmd', []);

        return parent::getLabelDmd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateLabel($dateLabel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateLabel', [$dateLabel]);

        return parent::setDateLabel($dateLabel);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateLabel', []);

        return parent::getDateLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatutDmd($statutDmd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatutDmd', [$statutDmd]);

        return parent::setStatutDmd($statutDmd);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatutDmd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatutDmd', []);

        return parent::getStatutDmd();
    }

}
